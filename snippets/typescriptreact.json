{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Styled_Component": {
    "prefix": "styled",
    "body": [
      "import { styled } from '@uifabric/utilities';",
      "import {",
      "  I${1:Component}Props,",
      "  I${1:Component}StyleProps,",
      "  I${1:Component}Styles",
      "} from './${1:Component}.types';",
      "import { ${1:Component}Base } from './${1:Component}.base';",
      "import { getStyles } from './${1:Component}.styles';",
      "",
      "export const ${1:Component} = styled<I${1:Component}Props, I${1:Component}StyleProps, I${1:Component}Styles>(",
      "  ${1:Component}Base,",
      "  getStyles",
      ");",
      "$2",
    ],
    "description": "Component with mergeStyles"
  },
  "classNamesFunction": {
    "prefix": "getClassNames",
    "body": [
      "import {",
      "  I${1:Component}StyleProps,",
      "  I${1:Component}Styles,",
      "} from  './${1:Component}.types';",
      "import { classNamesFunction } from '@uifabric/utilities';",
      "",
      "const getClassNames = classNamesFunction<I${1:Component}StyleProps, I${1:Component}Styles>();",
      "$2"
    ],
    "description": "getClassNames function to convert classNames to strings."
  },
}